RAII  principle

smart pointer

dead lock
thread

lambda expression

paas an input  to the function when creating the thread

what is furture

what is provider

difference of the provider and future

thread local  
when you pass a variable to another thread by refernece  you could change the value from another thread.


2. buling  block scope shadowing    exteranl linkage  tyepdef    headfiel guard
 what is a complier

command line arguments  ***

constexpr  

static assert

fundamental types:  

****intializaiton  different ways

nullptr   void  general pointer
cast a general pointer before use it.

rvalue  lvalue

copy constructor  move copy constructor
****difference between move and copy
std::ref()  std::move()
range based for   for(auto& e:a)   make a to be vector to see what happen
it is different with iterator

move operator
clone funciton in the notes

tmeplate  function tmeplate  
compositoin a
**** expression
**** recursive function
*** function pointer
*** function object
*** lambda expression
**** different kind of errors to catch   int   msg

*** variant   


container and iterator
the price vector in the notes
*** 
deque and vector  list  their difference
what is a vector, compare with deque definition

** iterator is pointer  be careful

algorithm

bind  ref
 any_of   for_each  find _if   none_of  

const volatile

RARI   

generic pointer


difference rvalue   lvalue

difference  copy constructor  move constructor

std::move()  std::ref()

 Resource Acquisition Is Initialization (RAII) idiom
 of object-oriented languages.  This idiom states that 
resource acquisition occurs at initialization time. 
 In other words, dynamic memory for an object is allocated 
at the same time as the pointer to that object is created. 

fstream  ms3 ms2








